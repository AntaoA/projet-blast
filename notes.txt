Pour la présentation :
    - Biblio + contexte
    - Implémentation rapide (améliorations par exemple (parallelisme, matrice perso, structure de données, E-values))
    - Résultats (comparaison perso, comparaison avec les résultats du papier de recherche)


Blast :
    - Liste de mots

    - Balayage de la database pour trouver les hits

    - Extension des hits

    - MSP : maximal segment pair
        Paire de score la plus élevée entre deux segments de même taille dans deux séquences







Blast II :
    - Double match, programmation dynamique avec seuil

    - Trois étapes (comme dans BLAST I):
        1. Construire la liste de mots
        2. Trouver les hits
        3. Étendre les hits (assez coûteux : typiquement plus de 90% du temps total de BLAST I)


        - Étape 1 : Construire la liste de mots
            Méthode classique (BLAST I)

        - Étape 2 : Trouver les hits
            On choisi une fenêtre de taille A
            On passe à l'étape 3 seulement si on trouve deux hits qui ne se chevauchent pas et à distance au plus A sur la même diagonale
            Le seuil T dois donc être plus petit pour garder la même sensibilité (plus de hits simple mais que peu de hits doubles à étendre (le plus coûteux))
            
        - Étape 3 : Étendre les hits
            On commence par faire une ungapped extension (BLAST I) sur le second hit
            Si le score dépasse un seuil Sg, cela déclanche une gapped extension
            La gapped extension est une programmation dynamique locale avec un seuil Xg
            On commence par choisir le seed (centre de la gapped extension) : on prend l'alignement de meilleur score sur une fenêtre de taille 11 (on utilise le HSP (alignement ungapped sur le second hit)) et on prend le centre de cette fenêtre comme seed
            On fait ensuite de la DP à droite et à gauche du seed pour trouver le meilleur score (avec seuil de drop Xg)
            La DP (ex : Smith-Waterman) autorise cette fois toutes les opérations de Levenshtein (match, substitution, gap (insertion ou délétion)). Pour les matchs et la substitution, les poids sont donnés par une matrice de substitution. Pour les gaps, on utilise une pénalité affine (coût d'ouverture + coût d'extension * taille du gap)


    - Définitions :
        Diagonale d'un hit : x1 - x2 pour un hit en position x1 dans la query et x2 dans la séquence considérée
        Distance entre deux hits (x1, x2) et (y1, y2) sur la même diagonale : y1 - x1

